// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contracts.v1/build_log_step_docker_image.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "contracts.v1/BuildLogStepDockerImage.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - BuildLogStepDockerImageRoot

@implementation BuildLogStepDockerImageRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - BuildLogStepDockerImageRoot_FileDescriptor

static GPBFileDescriptor *BuildLogStepDockerImageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"contracts.v1"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - BuildLogStepDockerImage

@implementation BuildLogStepDockerImage

@dynamic name;
@dynamic tag;
@dynamic isPulled;
@dynamic imageSize;
@dynamic hasPullDuration, pullDuration;
@dynamic error;
@dynamic isTrusted;

typedef struct BuildLogStepDockerImage__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSString *tag;
  GPBDuration *pullDuration;
  NSString *error;
  int64_t imageSize;
} BuildLogStepDockerImage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BuildLogStepDockerImage__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tag",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_Tag,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BuildLogStepDockerImage__storage_, tag),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isPulled",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_IsPulled,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "imageSize",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_ImageSize,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BuildLogStepDockerImage__storage_, imageSize),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pullDuration",
        .dataTypeSpecific.className = GPBStringifySymbol(GPBDuration),
        .number = BuildLogStepDockerImage_FieldNumber_PullDuration,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BuildLogStepDockerImage__storage_, pullDuration),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "error",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_Error,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BuildLogStepDockerImage__storage_, error),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isTrusted",
        .dataTypeSpecific.className = NULL,
        .number = BuildLogStepDockerImage_FieldNumber_IsTrusted,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BuildLogStepDockerImage class]
                                     rootClass:[BuildLogStepDockerImageRoot class]
                                          file:BuildLogStepDockerImageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BuildLogStepDockerImage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
