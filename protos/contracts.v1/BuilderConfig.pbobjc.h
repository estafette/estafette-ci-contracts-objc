// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contracts.v1/builder_config.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BuildParamsConfig;
@class BuildVersionConfig;
@class CIServerConfig;
@class CredentialConfig;
@class EstafetteEvent;
@class EstafetteManifest;
@class GitConfig;
@class ReleaseParamsConfig;
@class TrustedImageConfig;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - BuilderConfigRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface BuilderConfigRoot : GPBRootObject
@end

#pragma mark - BuilderConfig

typedef GPB_ENUM(BuilderConfig_FieldNumber) {
  BuilderConfig_FieldNumber_Action = 1,
  BuilderConfig_FieldNumber_Track = 2,
  BuilderConfig_FieldNumber_RegistryMirror = 3,
  BuilderConfig_FieldNumber_DockerDaemonMtu = 4,
  BuilderConfig_FieldNumber_Manifest = 5,
  BuilderConfig_FieldNumber_JobName = 6,
  BuilderConfig_FieldNumber_ReleaseName = 7,
  BuilderConfig_FieldNumber_EventsArray = 8,
  BuilderConfig_FieldNumber_CiServer = 9,
  BuilderConfig_FieldNumber_BuildParams = 10,
  BuilderConfig_FieldNumber_ReleaseParams = 11,
  BuilderConfig_FieldNumber_Git = 12,
  BuilderConfig_FieldNumber_BuildVersion = 13,
  BuilderConfig_FieldNumber_CredentialsArray = 14,
  BuilderConfig_FieldNumber_TrustedImagesArray = 15,
};

@interface BuilderConfig : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@property(nonatomic, readwrite, copy, null_resettable) NSString *track;

@property(nonatomic, readwrite, copy, null_resettable) NSString *registryMirror;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dockerDaemonMtu;

@property(nonatomic, readwrite, strong, null_resettable) EstafetteManifest *manifest;
/** Test to see if @c manifest has been set. */
@property(nonatomic, readwrite) BOOL hasManifest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *jobName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *releaseName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EstafetteEvent*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) CIServerConfig *ciServer;
/** Test to see if @c ciServer has been set. */
@property(nonatomic, readwrite) BOOL hasCiServer;

@property(nonatomic, readwrite, strong, null_resettable) BuildParamsConfig *buildParams;
/** Test to see if @c buildParams has been set. */
@property(nonatomic, readwrite) BOOL hasBuildParams;

@property(nonatomic, readwrite, strong, null_resettable) ReleaseParamsConfig *releaseParams;
/** Test to see if @c releaseParams has been set. */
@property(nonatomic, readwrite) BOOL hasReleaseParams;

@property(nonatomic, readwrite, strong, null_resettable) GitConfig *git;
/** Test to see if @c git has been set. */
@property(nonatomic, readwrite) BOOL hasGit;

@property(nonatomic, readwrite, strong, null_resettable) BuildVersionConfig *buildVersion;
/** Test to see if @c buildVersion has been set. */
@property(nonatomic, readwrite) BOOL hasBuildVersion;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CredentialConfig*> *credentialsArray;
/** The number of items in @c credentialsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger credentialsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TrustedImageConfig*> *trustedImagesArray;
/** The number of items in @c trustedImagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trustedImagesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
